swagger: "2.0"
info:
  description: "A Simple Content Moderation API for Text Sentiment and Image NSFW filtration"
  version: "1.0.0"
  title: "NullExplicit API"
host: "nullx.atangfino.tech"
basePath: "/nullxapi/v1"
tags:
  - name: "Text Analysis"
    description: "Endpoint for text analysis"
  - name: "Image Analysis"
    description: "Endpoint for image analysis"
  - name: "User Management"
    description: "Endpoint for user management"
schemes:
  - "http"
paths:
  /text_analysis:
    post:
      tags:
        - "Text Analysis"
      summary: "Analyze text sentiment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "Api-Key"
          in: "header"
          description: "API Key for authentication"
          type: "string"
          required: true
        - name: "text-input"
          in: "body"
          description: "Text input for analysis"
          schema:
            type: "object"
            properties:
              text-input:
                type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              messages:
                type: "array"
                items:
                  type: "object"
                  properties:
                    content:
                      type: "string"
                      description: "Content of the analyzed text"
                    score:
                      type: "number"
                      description: "Sentiment score of the analyzed text"
                    sentiment:
                      type: "string"
                      description: "Sentiment label of the analyzed text"
                    offset:
                      type: "integer"
                      description: "Starting position of the analyzed text within the input"
                    length:
                      type: "integer"
                      description: "Length of the analyzed text within the input"
        400:
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
              required:
                type: "string"
      security:
        - ApiKeyAuth: []
  /image_analysis:
    post:
      tags:
        - "Image Analysis"
      summary: "Analyze image content"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "Api-Key"
          in: "header"
          description: "API Key for authentication"
          type: "string"
          required: true
        - name: "image"
          in: "formData"
          description: "Please upload an image file (JPEG, PNG, JPG)"
          type: "file"
          required: true
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              categories-detected:
                type: "array"
                items:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                      description: "Name of the detected category"
                    confidence:
                      type: "number"
                      description: "Confidence level of the detected category"
        400:
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
              required:
                type: "string"
      security:
        - ApiKeyAuth: []
  /users:
    post:
      tags:
        - "User Management"
      summary: "Create a new user and generate an API key"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "body"
          description: "Username for the new user"
          schema:
            type: "object"
            properties:
              username:
                type: "string"
      responses:
        201:
          description: "Created"
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              api_key:
                type: "string"
        400:
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
      security:
        - []
